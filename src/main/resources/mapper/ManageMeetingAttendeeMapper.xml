<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shanxi.coal.dao.ManageMeetingAttendeeMapper">
  <resultMap id="BaseResultMap" type="com.shanxi.coal.domain.ManageMeetingAttendee">
    <id column="uuid" jdbcType="CHAR" property="uuid" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="created_by_org" jdbcType="VARCHAR" property="createdByOrg" />
    <result column="modified_by" jdbcType="VARCHAR" property="modifiedBy" />
    <result column="modified_date" jdbcType="TIMESTAMP" property="modifiedDate" />
    <result column="is_del" jdbcType="TINYINT" property="isDel" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="meeting_id" jdbcType="CHAR" property="meetingId" />
    <result column="leader_id" jdbcType="CHAR" property="leaderId" />
    <collection property="manageLeader" column="leader_id"
                select="com.shanxi.coal.dao.ManageLeaderMapper.selectByPrimaryKey"></collection>
  </resultMap>
  <sql id="Base_Column_List">
    uuid, created_date, created_by, created_by_org, modified_by, modified_date, is_del, 
    status, remark, meeting_id, leader_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from manage_meeting_attendee
    where uuid = #{uuid,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from manage_meeting_attendee
    where uuid = #{uuid,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.shanxi.coal.domain.ManageMeetingAttendee">
    insert into manage_meeting_attendee (uuid, created_date, created_by, 
      created_by_org, modified_by, modified_date, 
      is_del, status, remark, 
      meeting_id, leader_id)
    values (#{uuid,jdbcType=CHAR}, #{createdDate,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{createdByOrg,jdbcType=VARCHAR}, #{modifiedBy,jdbcType=VARCHAR}, #{modifiedDate,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{meetingId,jdbcType=CHAR}, #{leaderId,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.shanxi.coal.domain.ManageMeetingAttendee">
    insert into manage_meeting_attendee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        uuid,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdByOrg != null">
        created_by_org,
      </if>
      <if test="modifiedBy != null">
        modified_by,
      </if>
      <if test="modifiedDate != null">
        modified_date,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="meetingId != null">
        meeting_id,
      </if>
      <if test="leaderId != null">
        leader_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uuid != null">
        #{uuid,jdbcType=CHAR},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdByOrg != null">
        #{createdByOrg,jdbcType=VARCHAR},
      </if>
      <if test="modifiedBy != null">
        #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="meetingId != null">
        #{meetingId,jdbcType=CHAR},
      </if>
      <if test="leaderId != null">
        #{leaderId,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.shanxi.coal.domain.ManageMeetingAttendee">
    update manage_meeting_attendee
    <set>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="createdByOrg != null">
        created_by_org = #{createdByOrg,jdbcType=VARCHAR},
      </if>
      <if test="modifiedBy != null">
        modified_by = #{modifiedBy,jdbcType=VARCHAR},
      </if>
      <if test="modifiedDate != null">
        modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="meetingId != null">
        meeting_id = #{meetingId,jdbcType=CHAR},
      </if>
      <if test="leaderId != null">
        leader_id = #{leaderId,jdbcType=CHAR},
      </if>
    </set>
    where uuid = #{uuid,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.shanxi.coal.domain.ManageMeetingAttendee">
    update manage_meeting_attendee
    set created_date = #{createdDate,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      created_by_org = #{createdByOrg,jdbcType=VARCHAR},
      modified_by = #{modifiedBy,jdbcType=VARCHAR},
      modified_date = #{modifiedDate,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      meeting_id = #{meetingId,jdbcType=CHAR},
      leader_id = #{leaderId,jdbcType=CHAR}
    where uuid = #{uuid,jdbcType=CHAR}
  </update>

  <insert id="insertBatch">
    INSERT INTO manage_meeting_attendee(uuid,meeting_id, leader_id) values
    <foreach collection="list" item="item" index="index" open="" close="" separator=",">
      ( #{item.uuid}, #{item.meetingId} , #{item.leaderId} )
    </foreach>
  </insert>

  <select id="listByMeetingId" parameterType="java.lang.String"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from manage_meeting_attendee
    where meeting_id = #{meetingId,jdbcType=VARCHAR}
  </select>

  <delete id="deleteByMeetingId"  parameterType="java.lang.String">
    delete from manage_meeting_attendee
    where meeting_id = #{meetingId,jdbcType=VARCHAR}
  </delete>
</mapper>